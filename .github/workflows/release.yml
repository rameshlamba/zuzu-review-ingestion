name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test

    - name: Build application
      run: npm run build

    - name: Generate changelog
      id: changelog
      run: |
        # Get the latest two tags
        CURRENT_TAG=${GITHUB_REF#refs/tags/}
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "## Changes since $PREVIOUS_TAG" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          echo "ðŸŽ‰ First release of the Review System Microservice!" >> CHANGELOG.md
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push release image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ steps.changelog.outputs.current_tag }}
          ghcr.io/${{ github.repository }}:latest
        labels: |
          org.opencontainers.image.title=Review System Microservice
          org.opencontainers.image.description=Hotel review ingestion microservice
          org.opencontainers.image.version=${{ steps.changelog.outputs.current_tag }}
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.changelog.outputs.current_tag }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

    - name: Notify deployment channels
      run: |
        echo "ðŸš€ Release ${{ steps.changelog.outputs.current_tag }} has been created!"
        echo "ðŸ“¦ Docker image: ghcr.io/${{ github.repository }}:${{ steps.changelog.outputs.current_tag }}"